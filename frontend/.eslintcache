[{"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/index.js":"1","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/App.js":"2","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/layout/Header.js":"3","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/layout/footer.js":"4","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/Home.js":"5","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/layout/MetaData.js":"6","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/store.js":"7","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/reducers/productReducers.js":"8","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/constants/productConstants.js":"9","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/actions/productActions.js":"10","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/product/product.js":"11","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/layout/loader.js":"12","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/Detail.js":"13","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/layout/search.js":"14","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/reducers/userReducer.js":"15","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/constants/userConstants.js":"16","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/user/login.js":"17","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/user/register.js":"18","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/user/profile.js":"19","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/route/protectedRout.js":"20","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/actions/authAction.js":"21","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/actions/userAction.js":"22","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/user/UpdateProfile.js":"23","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/reducers/cartReducer.js":"24","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/constants/cartConstants.js":"25","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/actions/cartAction.js":"26","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/cart/cart.js":"27","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/cart/something.js":"28","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/reducers/root-reducers.js":"29","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/cart/Shipping.js":"30","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/cart/CheckoutStep.js":"31","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/cart/ConfirmOrder.js":"32","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/cart/payment.js":"33","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/reducers/orderReducer.js":"34","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/constants/orderConstants.js":"35","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/actions/orderAction.js":"36","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/cart/orderSuccess.js":"37","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/orders/ListOrders.js":"38","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/orders/orderDetail.js":"39","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/review/review.js":"40"},{"size":737,"mtime":1634994376941,"results":"41","hashOfConfig":"42"},{"size":3086,"mtime":1635248506313,"results":"43","hashOfConfig":"42"},{"size":3024,"mtime":1634908820264,"results":"44","hashOfConfig":"42"},{"size":345,"mtime":1633953423815,"results":"45","hashOfConfig":"42"},{"size":6930,"mtime":1634717664842,"results":"46","hashOfConfig":"42"},{"size":211,"mtime":1633955507892,"results":"47","hashOfConfig":"42"},{"size":721,"mtime":1634994579545,"results":"48","hashOfConfig":"42"},{"size":2811,"mtime":1635268802459,"results":"49","hashOfConfig":"42"},{"size":1740,"mtime":1635256194898,"results":"50","hashOfConfig":"42"},{"size":2239,"mtime":1635266515104,"results":"51","hashOfConfig":"42"},{"size":1524,"mtime":1634141438819,"results":"52","hashOfConfig":"42"},{"size":155,"mtime":1633974221700,"results":"53","hashOfConfig":"42"},{"size":9693,"mtime":1635274755164,"results":"54","hashOfConfig":"42"},{"size":2345,"mtime":1634142212069,"results":"55","hashOfConfig":"42"},{"size":3565,"mtime":1635236897368,"results":"56","hashOfConfig":"42"},{"size":2053,"mtime":1634287855226,"results":"57","hashOfConfig":"42"},{"size":3441,"mtime":1635249033424,"results":"58","hashOfConfig":"42"},{"size":5842,"mtime":1635061292435,"results":"59","hashOfConfig":"42"},{"size":1978,"mtime":1634544197620,"results":"60","hashOfConfig":"42"},{"size":781,"mtime":1634717934394,"results":"61","hashOfConfig":"42"},{"size":2248,"mtime":1635238035349,"results":"62","hashOfConfig":"42"},{"size":1339,"mtime":1634744466424,"results":"63","hashOfConfig":"42"},{"size":5422,"mtime":1634737065847,"results":"64","hashOfConfig":"42"},{"size":1108,"mtime":1634983706958,"results":"65","hashOfConfig":"42"},{"size":131,"mtime":1634904591400,"results":"66","hashOfConfig":"42"},{"size":1164,"mtime":1634907082316,"results":"67","hashOfConfig":"42"},{"size":2540,"mtime":1634996352094,"results":"68","hashOfConfig":"42"},{"size":3336,"mtime":1634985477066,"results":"69","hashOfConfig":"42"},{"size":921,"mtime":1635265646379,"results":"70","hashOfConfig":"42"},{"size":5191,"mtime":1635011421711,"results":"71","hashOfConfig":"42"},{"size":1844,"mtime":1635009254378,"results":"72","hashOfConfig":"42"},{"size":4016,"mtime":1635104535433,"results":"73","hashOfConfig":"42"},{"size":5767,"mtime":1635145385169,"results":"74","hashOfConfig":"42"},{"size":2277,"mtime":1635254433050,"results":"75","hashOfConfig":"42"},{"size":1055,"mtime":1635100481846,"results":"76","hashOfConfig":"42"},{"size":2114,"mtime":1635254700494,"results":"77","hashOfConfig":"42"},{"size":742,"mtime":1635145526651,"results":"78","hashOfConfig":"42"},{"size":2971,"mtime":1635251167379,"results":"79","hashOfConfig":"42"},{"size":3906,"mtime":1635255100542,"results":"80","hashOfConfig":"42"},{"size":714,"mtime":1635274679058,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1c4tk8y",{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"84"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"84"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/index.js",[],["183","184"],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/App.js",["185","186","187","188","189","190","191"],"import Header from './components/layout/Header' ;\nimport Footer from './components/layout/footer'\nimport Home from './components/Home'\n//import Product_detail from './components/product_detail';\nimport Detail from './components/Detail' ;\nimport Login from './components/user/login' ;\nimport Register from './components/user/register';\nimport ListOrders from './components/orders/ListOrders';\nimport {useEffect , useState} from 'react' ;\n\nimport axios from 'axios' ;\n\nimport store from './store' ;\nimport { loaduser } from './actions/authAction' ;\nimport ProtectedRout from './components/route/protectedRout';\nimport { BrowserRouter as Router , Route} from 'react-router-dom' ;\nimport Profile from './components/user/profile' ;\nimport UpdateProfile from './components/user/UpdateProfile';\nimport Shipping from './components/cart/Shipping' ;\nimport ConfirmOrder from './components/cart/ConfirmOrder' ;\nimport Payment from './components/cart/payment' ;\nimport Cart from './components/cart/cart' ;\n// import OrderList from './components/orders/ListOrders' ;\nimport OrderDetail from './components/orders/orderDetail';\nimport { myOrders } from './actions/orderAction';\n\nimport Success from './components/cart/orderSuccess' ;\nimport './App.css'\n\nimport { useSelector , useDispatch } from 'react-redux';\n\n// Payment \nimport { Elements } from '@stripe/react-stripe-js' ;\nimport { loadStripe } from '@stripe/stripe-js' ;\n\n\nfunction App() { \n  const [stripeApiKey , setStripeApiKey ] = useState('') ;\n\n\n  useEffect(() => {\n   \ntry{\n\n  store.dispatch(loaduser()) ;\n  store.dispatch(myOrders()) ;\n    setStripeApiKey(process.env.REACT_APP_STRIPE_API_KEY) ;\n} catch(error) {\n  console.log(error) ;\n}\n    \n  \n  }, []) ;\n\n  console.log('This is stripeKey')\n  console.log(process.env.REACT_APP_STRIPE_API_KEY) ;\n\n  return (\n    <Router>\n    <div className=\"App\">\n     <Header />\n     <div className=\"container container-fluid\">\n          \n          \n          <ProtectedRout path = \"/me\" component={Profile} exact/>\n          <ProtectedRout path = \"/me/update\" component={UpdateProfile} exact/>\n          <Route path = \"/cart\" component={Cart} />\n          <Route path = \"/login\" component={Login}/>\n          <Route path = \"/register\" component={Register}/>\n          <ProtectedRout path = \"/shipping\" component={Shipping} exact/>\n          <ProtectedRout path = \"/confirm\" component={ConfirmOrder} exact/>\n          <ProtectedRout path = \"/success\" component={Success} exact/>\n          <ProtectedRout path = \"/orders/me\" component={ListOrders} exact/>\n          <ProtectedRout path = \"/order/:id\" component={OrderDetail} exact/>\n\n          <Route path = \"/\" component={Home} exact />\n          <Route path = \"/search/:keyword\" component={Home}  />\n\n          <Route path = \"/product/:id\" component={Detail} exact />\n\n          {/* {stripeApiKey && \n            <Elements stripe={loadStripe(stripeApiKey)}>\n              <ProtectedRout path=\"/payment\" component={Payment} />\n            </Elements>\n          } */}\n     </div>\n     <Footer /> \n    </div>\n    </Router>\n   \n  );\n}\n\nexport default App;\n","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/layout/Header.js",["192","193","194","195"],"import React , {Fragment , useState , useEffect} from 'react'\n\nimport Search from './search' ;\nimport {Route ,Link} from 'react-router-dom' ;\n\nimport { useDispatch, useSelector } from 'react-redux' ;\n\nimport { logout } from '../../actions/authAction' ;\n\nconst Header = () => {\n\n  const { isAuthenticated , user , error , loading } = useSelector(state => state.auth)  ;\n\n  const dispatch = useDispatch() ;\n  useEffect( () => {\n\n    \n    if(isAuthenticated) {\n\n      console.log(user.name) ;\n    }\n\n  } , [isAuthenticated])\n\n  const handleLOGOUT = (e) => {\n    e.preventDefault(); \n    dispatch(logout()) ;\n   // alert.success('Logged out successfully') ;\n  }\n\n    return (\n        <Fragment>\n            <nav className=\"navbar row\">\n      <div className=\"col-12 col-md-3\">\n        <div className=\"navbar-brand\">\n          <img src=\"./images/shopit_logo.png\" />\n        </div>\n      </div>\n\n      <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n        \n        <Route render={ ({history}) => <Search history={history} /> } />\n      </div>\n\n      <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\n        \n        <Link to = '/cart' >\n          <span id=\"cart\" className=\"ml-3\">Cart</span> \n          <span className=\"ml-1\" id=\"cart_count\">2</span>\n       </Link>\n\n        {user ? (\n                        <div className=\"ml-4 dropdown d-inline\">\n                            <Link className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                                <figure className=\"avatar avatar-nav\">\n                                    <img\n                                        src={user.avatar && user.avatar.url}\n                                        alt={user && user.name}\n                                        className=\"rounded-circle\"\n                                    />\n                                </figure>\n                                <span>{user && user.name}</span>\n                            </Link>\n                            \n\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n\n                                {user && user.role === 'admin' && (\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\n                                )}\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={handleLOGOUT} >\n                                    Logout\n                                </Link>\n\n                            </div>\n\n                        </div>\n\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\n\n      </div>\n\n\n                     \n\n    </nav>\n\n        </Fragment>\n    )\n}\n\nexport default Header;","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/layout/footer.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/Home.js",["196","197","198","199"],"import React , {Fragment ,useState , useEffect} from 'react'\n\n\nimport Slider from 'rc-slider' ;\nimport 'rc-slider/assets/index.css' ;\nimport {useDispatch , useSelector} from 'react-redux' ;\nimport { getProducts } from '../actions/productActions'\nimport Pagination from 'react-js-pagination' ;\nimport { MetaData  } from './layout/MetaData';\nimport Loader from './layout/loader'\nimport Product from './product/product' ;\nimport { useAlert } from 'react-alert' ;\n\nimport { login } from '../actions/authAction' ;\n\nconst { createSliderWithTooltip } = Slider ;\n\nconst Range = createSliderWithTooltip(Slider.Range)\n\n const Home = ({match}) => {\n\n\n\n    const [currentPage , setCurrentPage] = useState(1) ;\n\n    const [price , setPrice] = useState([1 , 1000]) ;\n    const [catagory , setCatagory] = useState(``)\n    const [rating , setRating] = useState(0) ;\n\n\n\n    const catagories = [\n                'Electronics' ,\n                'Cameras' ,\n                'Laptop' ,\n                'Accessories' ,\n                'Headphones' ,\n                'Food' ,\n                'Books' ,\n                'Clothes/Shoes' ,\n                'Beauty/Health' ,\n                'Home'\n    ] ;\n\n    const alert = useAlert() ;\n    const dispatch = useDispatch() ;\n\n    const {loading , products , error , resPerPage , productCount  } = useSelector(state => state.products) ;\n\n    const prodPerPage = 8 ;\n    const prodCount =100000000 ;\n    console.log(products)\n\n    const keyword = match.params.keyword ;\n\n    useEffect(() => {\n     \n      if(error) {\n        return alert.error(error) ;\n      }\n\n      dispatch(getProducts(keyword ,currentPage , price , catagory) ,rating) ;\n\n    } , [dispatch , alert , error , keyword , currentPage , price , catagory , rating])\n\n\n    function setCurrentPageNo(pageNumber) {\n      setCurrentPage(pageNumber)\n    }\n\n    return (\n        <Fragment>\n         {loading ? <Loader /> : (\n           <Fragment>\n              <MetaData title={'Buy Best Products Online'}/>\n              <h1 id=\"products_heading\">Latest Products</h1>\n\n              <section id=\"products\" className=\"container mt-5\">\n              <div className=\"row\">\n                {keyword ? (\n                  <Fragment>\n                      <div className=\"col-6 col-md-3 mt-5 mb-5\">\n                        <div className=\"px-5\">\n                          <Range \n                              marks={{\n                                1: `$1` ,\n                                1000: `$1000`\n                              }}\n                              min={1}\n                              max={1000}\n                              defaultValue={1,1000}\n                              tipFormatter={value => `$${value}`}\n                              tipProps={{\n                                placement: \"top\" ,\n                                visible: true\n                              }}\n                              value={price}\n                              onChange={price => setPrice(price)}\n                              />\n                              <hr className=\"my-5\" />\n\n                           <div className=\"mt-5\">\n                             <h4 className=\"mb-3\">\n                                catagory\n                             </h4>\n                             <ul className=\"pl-0\">\n                               {catagories.map(catagory => (\n                                 <li style={{cursor: 'pointer' , \n                                              listStyleType: 'none',\n                                            }}\n                                              key={catagory} \n                                              onClick={() => setCatagory(catagory)  }\n                                             >\n                                          {catagory}\n                                 </li>\n                               ))}\n                             </ul>\n                           </div>\n\n                           <hr className=\"my-3\" />\n\n                           <div className=\"mt-5\">\n                             <h4 className=\"mb-3\">\n                                Ratings\n                             </h4>\n                             <ul className=\"pl-0\">\n                               {[5 , 4, 3 ,2 ,1].map(star => (\n                                 <li style={{cursor: 'pointer' , \n                                              listStyleType: 'none',\n                                            }}\n                                              key={star} \n                                              onClick={() => setRating(star)  }\n                                             >\n                                          <div className=\"rating-outer\">\n                                            <div className=\"rating-inner\" \n                                                style={{\n                                                  width: `${star * 20}%`\n                                                }}>\n                                              \n                                            </div>\n\n                                          </div>\n                                 </li>\n                               ))}\n                             </ul>\n                           </div>\n\n                        </div>\n                      </div>\n\n                      \n                      <div className=\"col-6 col-md-9\">\n                              <div className=\"row\">\n                                { \n                                products.map(product => {\n                                return <Product key={product._id} product={product} col={4}/> \n  \n                                }) }\n                              </div>\n                      </div>\n                  </Fragment>\n                  \n                ): (\n                  \n                  products.map(product => {\n                  return <Product key={product._id} product={product} col={3}/> \n  \n                 })\n                )}\n                \n           \n                      </div>\n                      <div className=\"d-flex justify-content-center mt-5\">\n                        <Pagination \n                          activePage={currentPage}\n                          itemsCountPerPage={prodPerPage} \n                          totalItemsCount = {productCount} \n                          onChange={setCurrentPageNo}\n                          nextPageText = {'Next'}\n                          prevPageText = {'prev'}\n                          firstPageText = {'First'}\n                          lastPageText = {'last'}\n                          itemClass=\"page-item\"\n                          linkClass=\"page-link\"\n                           />\n                           \n                      </div>\n                    </section>\n           </Fragment>\n         )}\n         \n\n              </Fragment>\n  \n    )\n}\n\nexport default  Home;","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/layout/MetaData.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/store.js",["200","201","202","203","204","205"],"import { createStore , combineReducers , applyMiddleware } from 'redux' ;\nimport thunk from 'redux-thunk' ;\nimport { composeWithDevTools } from 'redux-devtools-extension' ;\nimport { authReducer , userReducer } from './reducers/userReducer' ;\nimport {productsReducer , productDetailsReducer} from './reducers/productReducers' ;\nimport { cartReducer } from './reducers/cartReducer' ;\n\nimport {persistStore} from 'redux-persist' ;\nimport rootReducers from './reducers/root-reducers';\n\n\nlet initialState = {}\n\nconst middleware = [thunk] ;\nexport const store = createStore(rootReducers , initialState , composeWithDevTools(applyMiddleware(...middleware))) \nexport const persistor = persistStore(store) ;\n\nexport default store;","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/reducers/productReducers.js",["206","207"],"import ProductConstants, { PRODUCTS_DETAIL_FAIL, PRODUCTS_DETAIL_SUCCESS } from '../constants/productConstants' ;\n\nexport const  productsReducer = ( state = { products: [] } , action) => {\n    \n    switch(action.type) {\n        case ProductConstants.ALL_PRODUCTS_REQUEST: \n            return {\n                loading: true,\n                products: []\n            }\n        case ProductConstants.ALL_PRODUCTS_SUCCESS: \n            return {\n                ...state ,\n                loading: false,\n                products: action.payload.products ,\n                productCount: action.payload.productCount ,\n                resPerPage: action.payload.resPerPage\n            } \n        case ProductConstants.ALL_PRODUCTS_FAIL: \n            return {\n                loading: false,\n                products: [] ,\n                error: action.payload\n              } \n        case ProductConstants.CLEAR_ERRORS: \n            return {\n                ...state ,\n                error: null\n            }         \n            \n        \n        default: return state ;\n    }\n}\n\nexport const productDetailsReducer = (state = { product:  [] } , action) => {\n    switch(action.type) {\n        case ProductConstants.PRODUCT_DETAILS_REQUEST: \n            return {\n                ...state ,\n                loading: true\n            }\n        case ProductConstants.PRODUCT_DETAILS_SUCCESS: \n            return {\n                loading: false ,\n                product: action.payload.product\n            }\n        case ProductConstants.PRODUCT_DETAILS_FAIL: \n            return {\n                ...state ,\n                loading: false ,\n                product: [] ,\n                error: action.payload\n            }\n        case ProductConstants.CLEAR_ERRORS: \n            return {\n                ...state ,\n                error: null\n            }\n        default: return   state \n    }\n}\n\nexport const  newReviewReducer = ( state = {} , action) => {\n    \n    switch(action.type) {\n        case ProductConstants.NEW_REVIEW_REQUEST: \n            return {\n                ...state ,\n                loading: true,\n            }\n        case ProductConstants.NEW_REVIEW_SUCCESS: \n            return {\n               \n                loading: false,\n                success: action.payload\n            } \n        case ProductConstants.NEW_REVIEW_FAIL: \n            return {\n                loading: false,\n                error: action.payload\n              } \n        case ProductConstants.NEW_REVIEW_RESET: \n            return {\n                ...state ,\n                success: false\n            }     \n        case ProductConstants.CLEAR_ERRORS: \n            return {\n                ...state ,\n                error: null\n            }    \n            \n        \n        default: return state ;\n    }\n}\n\n","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/constants/productConstants.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/actions/productActions.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/product/product.js",["208"],"import React from 'react'\nimport { Link } from 'react-router-dom' ;\n\nconst  product = ({product, col}) => {\n    return (\n        <div key={product._id} className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n                       <div className=\"card p-3 rounded\">\n                         <img\n                             className=\"card-img-top mx-auto\"\n                             src={product.images[0].url}\n                           />\n                           <div className=\"card-body d-flex flex-column\">\n                               <h5 className=\"card-title\">\n                                   <Link to={`/product/${product._id}`}>{product.name}</Link>\n                                     </h5>\n                               <div className=\"ratings mt-auto\">\n                                   <div className=\"rating-outer\">\n                                        <div className=\"rating-inner\" style={{width: `${(product.ratings / 5) * 100}%`}}></div>\n                                        </div>\n                                       <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n                                   </div>\n                                   <p className=\"card-text\">${product.price}</p>\n                                   <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\n                                 </div>\n                               </div>\n                             </div>\n    )\n}\n\nexport default product ;","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/layout/loader.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/Detail.js",["209","210"],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/layout/search.js",["211","212"],"import React , {Fragment ,useState , useEffect} from 'react'\n\n// import {useDispatch , useSelector} from 'react-redux' ;\n// import { getProducts } from '../../actions/productActions'\n// import Pagination from 'react-js-pagination' ;\n// import { MetaData  } from './MetaData';\n// import Loader from './layout/loader'\n// import Product from './product/product' ;\n// import { useAlert } from 'react-alert' ;\n\n const Search = ({history}) => {\n\n    const [keyword ,setKeyword] = useState() ;\n\n        const searchHandler = (e) => {\n        e.preventDefault()\n\n        if(keyword) {\n            history.push(`/search/${keyword}`)\n\n        }else {\n            history.push(`/`)\n        }\n    }\n\n\n    return (\n                    <form onSubmit={searchHandler}>\n                <div className=\"input-group\">\n          <input\n            type=\"text\"\n            id=\"search_field\"\n            className=\"form-control\"\n            placeholder=\"Enter Product Name ...\"\n            onChange={(e) => setKeyword(e.target.value)}\n          />\n          <div className=\"input-group-append\">\n            <button id=\"search_btn\" className=\"btn\">\n              <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n            </form>\n       \n  \n    )\n}\n\nexport default  Search ;\n\n\n\n// import React , {useState} from 'react'\n\n\n// const search = ({history}) => {\n\n//     const [keyword ,setKeyword] = useState('') ;\n\n//     const searchHandler = (e) => {\n//         e.preventDefault()\n\n//         if(keyword) {\n//             history.push(`/search/${keyword}`)\n\n//         }else {\n//             history.push(`/`)\n//         }\n//     }\n//     return (\n        \n//             <form onSubmit={searchHandler}>\n//                 <div className=\"input-group\">\n//           <input\n//             type=\"text\"\n//             id=\"search_field\"\n//             className=\"form-control\"\n//             placeholder=\"Enter Product Name ...\"\n//             onChange={(e) => setKeyword(e.target.value)}\n//           />\n//           <div className=\"input-group-append\">\n//             <button id=\"search_btn\" className=\"btn\">\n//               <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n//             </button>\n//           </div>\n//         </div>\n//             </form>\n       \n//     )\n// }\n\n// export default search\n","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/reducers/userReducer.js",["213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232"],"import\n{\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_RESET,\n    UPDATE_PASSWORD_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_RESET,\n    UPDATE_PROFILE_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_RESET,\n    UPDATE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_RESET,\n    DELETE_USER_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants' ;\n\nexport const authReducer = (state = {user: {}} , action) => {\n    switch(action.type) {\n        case LOGIN_REQUEST:\n        case REGISTER_USER_REQUEST:\n        case LOAD_USER_REQUEST:\n            return {\n                loading: true,\n                isAuthenticated: false,\n            }\n\n        case LOGIN_SUCCESS:\n        case REGISTER_USER_SUCCESS:\n        case LOAD_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: true,\n                user: action.payload\n            }\n\n        case LOGOUT_SUCCESS:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null\n            }\n\n        case LOAD_USER_FAIL:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case LOGOUT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case LOGIN_FAIL:\n        case REGISTER_USER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state = {user: {}} , action) => {\n    switch(action.type) {\n        case UPDATE_USER_REQUEST : \n        case UPDATE_PASSWORD_REQUEST:\n            return {\n                ...state ,\n                loading: true ,\n                isUpdated: false ,\n\n            }\n        case UPDATE_USER_SUCCESS : \n        case UPDATE_PASSWORD_SUCCESS: \n            return {\n                ...state ,\n                loading: false ,\n                isUpdated: true ,\n                updatedUser: action.payload \n\n            }\n        case UPDATE_USER_FAIL : \n        case UPDATE_PASSWORD_FAIL: \n            return {\n                ...state ,\n                loading: false ,\n                isUpdated: false ,\n                err: action.payload\n            }\n        case UPDATE_USER_RESET : \n        case UPDATE_PASSWORD_RESET: \n            return {\n                ...state ,\n                loading: false ,\n                isUpdated: false ,\n                updatedUser: null \n            }\n        default: \n            return  state ;\n            \n\n    }\n}\n","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/constants/userConstants.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/user/login.js",["233"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Loader from '../layout/loader'\nimport {MetaData} from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login , cleanErrors} from '../../actions/authAction' ;\n\nconst Login = ({ history, location }) => {\n\n    const [password , setPassword] = useState() ;\n    const [email , setEmail] = useState() ;\n\n    const dispatch = useDispatch() ;\n    const alert = useAlert() ;\n    const {isAuthenticated , error , loading } = useSelector(state => state.auth) ;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/' ;\n\n    useEffect(() => {\n        if(isAuthenticated){\n            history.push(redirect) ;\n        } \n\n        if(error) {\n            console.log('error.........' + error)\n            alert.error(error) ;\n          dispatch(cleanErrors()) ;\n        } \n\n       \n\n    } , [isAuthenticated ,dispatch , error]) ;\n\n    const submitHandler = (e) => {\n        e.preventDefault() ;\n        dispatch(login(email , password)) ;\n    }\n\n    \n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Login'} />\n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Login</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password_field\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    LOGIN\n                                </button>\n\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\n                            </form>\n                        </div>\n                    </div>\n\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/user/register.js",["234","235"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport {MetaData} from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { register, cleanErrors } from '../../actions/authAction'\n\nconst Register = () => {\n\n    const alert = useAlert()  ;\n    \n    const [user , setUser] = useState({\n        name: '' ,\n        email: '' ,\n        password: ''\n    }) ;\n\n    const {name , email , password} = user ;\n\n    const [avatar , setAvatar] = useState('') ;\n    const [avatarPreview , setAvatarPreview] = useState('/images/default_avatar.jpg') ;\n\n\n    const disptach = useDispatch() ;\n\n    const {isAuthenticated , error , loading} = useSelector(state => state.auth) ;\n\n    useEffect( () => {\n        if(isAuthenticated) {\n            console.log('authenticated successfully') ;\n        }\n\n        if(error) {\n            console.log(error) ;\n            alert.error(error.message) ;\n            cleanErrors()\n        }\n\n\n    } , [isAuthenticated , error ])\n\n    const submitHandler = (e) => {\n        e.preventDefault() ;\n        //console.log('firing and wiring........')\n        const formData = new FormData() ;\n        formData.set('name' , name) ;\n        formData.set('email', email) ;\n        formData.set('password' , password) ;\n        formData.set('avatar' , avatar) ;\n\n        disptach(register(\n           formData\n        ))\n    }\n\n    const onChange = (e) => {\n        e.preventDefault() ;\n\n        if(e.target.name == 'avatar') {\n\n            const reader = new FileReader() ;\n\n            reader.onload = () => {\n                if(reader.readyState === 2) {\n                    console.log('image is being set')\n                    setAvatarPreview(reader.result)\n                    setAvatar(reader.result)\n                }\n            }\n\n            reader.readAsDataURL(e.target.files[0])\n        }else{\n            setUser({...user , [e.target.name]: e.target.value}) ;\n\n        }\n\n    }\n\n   \n    return (\n        <Fragment>\n\n            <MetaData title={'Register User'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mb-3\">Register</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={onChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                name='password'\n                                value={password}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept=\"iamges/*\"\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button\n                            id=\"register_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={loading ? true : false}\n                        >\n                            REGISTER\n                        </button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default Register\n","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/user/profile.js",["236"],"import React , { Fragment} from 'react' ;\nimport { Link } from 'react-router-dom'\n\nimport {useDispatch , useSelector } from 'react-redux' ;\n\nimport Loader from '../layout/loader';\nimport { MetaData } from '../layout/MetaData';\n\nconst Profile = () => {\n    const { user , loading } = useSelector(state => state.auth)  ;\n\n    return (\n        <Fragment>\n        {loading ? <Loader /> : (\n            <Fragment>\n                <MetaData title={'Your Profile'} />\n\n                <h2 className=\"mt-5 ml-5\">My Profile</h2>\n                <div className=\"row justify-content-around mt-5 user-info\">\n                    <div className=\"col-12 col-md-3\">\n                        <figure className='avatar avatar-profile'>\n                            <img className=\"rounded-circle img-fluid\" src={user.avatar.url} alt={user.name} />\n                        </figure>\n                        <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\n                            Edit Profile\n                        </Link>\n                    </div>\n\n                    <div className=\"col-12 col-md-5\">\n                        <h4>Full Name</h4>\n                        <p>{user.name}</p>\n\n                        <h4>Email Address</h4>\n                        <p>{user.email}</p>\n\n                        <h4>Joined On</h4>\n                        <p>{String(user.createdAt).substring(0, 10)}</p>\n\n                        {user.role !== 'admin' && (\n                            <Link to=\"/orders/me\" className=\"btn btn-danger btn-block mt-5\">\n                                My Orders\n                            </Link>\n                        )}\n\n                        <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\n                            Change Password\n                        </Link>\n                    </div>\n                </div>\n            </Fragment>\n        )}\n    </Fragment>\n    )\n}\n\nexport default Profile ;","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/route/protectedRout.js",["237","238"],"import React , { Fragment} from 'react' ;\nimport {useDispatch , useSelector } from 'react-redux' ;\n\nimport  {Route , Redirect } from 'react-router';\n\n\nconst ProtectedRout = ({component: Component , ...rest}) => {\n    const { user , loading ,isAuthenticated } = useSelector(state => state.auth)  ;\n\n    return (\n        <Fragment>\n             {loading === false && (\n                <Route\n                    {...rest}\n                    render={props => {\n                        if(isAuthenticated === false) {\n                            return <Redirect to = '/login' /> \n                        }\n                        return <Component {...props} />\n                    }}\n                    />\n             )}\n        </Fragment>\n    )\n}\n\nexport default ProtectedRout ;","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/actions/authAction.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/actions/userAction.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/user/UpdateProfile.js",["239","240","241"],"import React , { Fragment , useState , useEffect} from 'react' ;\nimport { Link } from 'react-router-dom'\n\nimport {useDispatch , useSelector } from 'react-redux' ;\nimport { useAlert } from 'react-alert';\nimport Loader from '../layout/loader';\nimport { MetaData } from '../layout/MetaData';\nimport userConstants from '../../constants/userConstants' ;\nimport { loaduser , cleanErrors } from '../../actions/authAction';\nimport { updateUser } from '../../actions/userAction';\n\nconst UpdateProfile = ({history}) => {\n    const [name , setName ] = useState('') ;\n    const [email , setEmail] = useState('') ;\n    const [avatarPreview , setAvatarPreview] = useState('/images/default_avatar.jpg') ;\n    const [avatar , setAvatar] = useState('') ;\n\n    const dispatch = useDispatch() ;\n    const {user } = useSelector(state => state.auth) ;\n    const { isUpdated , updatedUser , error , loading} = useSelector(state => state.user) ;\n    \n    const alert = useAlert() ;\n    \n    useEffect(() => {\n        console.log(updatedUser) ;\n        if(user) {\n            setName(user.name) ;\n            setEmail(user.email) ;\n            setAvatarPreview(user.avatar.url) ;\n        }\n\n        if(error) {\n            alert.error(error) ;\n            dispatch(cleanErrors) ;\n        }\n\n        \n        if(isUpdated) {\n            alert.success('User updated successfully') ;\n            dispatch(loaduser()) ;\n            console.log(updatedUser) ;\n            history.push('/me') ;\n\n            dispatch({\n                type: userConstants.UPDATE_USER_RESET\n            })\n\n        }\n\n\n\n    } , [dispatch , alert , error , history , isUpdated , updatedUser]) ;\n\n\n    const submitHandler = (e) => {\n       e.preventDefault() ;\n\n        const formData = new FormData() ;\n        formData.set('name' , name) ;\n        formData.set('email' , email) ;\n        formData.set('avatar' , avatar) ;\n\n        dispatch(updateUser(formData)) ;\n    }\n\n    const onChange = e => {\n        \n        const reader = new FileReader() ;\n\n        reader.onload = () => {\n            if(reader.readyState === 2) {\n                setAvatar(reader.result) ;\n                setAvatarPreview(reader.result) ;\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0]) ;\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept='image/*'\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/reducers/cartReducer.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/constants/cartConstants.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/actions/cartAction.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/cart/cart.js",["242","243","244","245","246","247","248"],"import React , {Fragment, useEffect , useState} from 'react' ;\nimport { useAlert } from 'react-alert';\n\nimport Loader from '../layout/loader';\n\nimport {Something} from './something' ;\nimport { useDispatch , useSelector } from 'react-redux';\nimport { MetaData } from '../layout/MetaData';\nimport { addItemToCart , removeItemFromCart ,  } from '../../actions/cartAction' ;\n\nconst Cart = ({history}) => {\n\n\n    const dispatch = useDispatch() ;\n\n    const { cartItems } = useSelector(state => state.cart) ;\n\n    const removeCartItemHandler = (id) => {\n        dispatch(removeItemFromCart(id))\n    }\n\n    const increaseQty = (id, quantity, stock) => {\n        const newQty = quantity + 1;\n\n        if (newQty > stock) return;\n\n        dispatch(addItemToCart(id, newQty))\n    }\n\n    const decreaseQty = (id, quantity) => {\n\n        const newQty = quantity - 1;\n\n        if (newQty <= 0) return;\n\n        dispatch(addItemToCart(id, newQty))\n\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n   \n    return (\n        <Fragment>\n        <MetaData title={'Your Cart'} />\n        {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : \n            ( \n            <Fragment>\n                <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\n\n                <div className=\"row d-flex justify-content-between\">\n                    <div className=\"col-12 col-lg-8\">\n\n                        {cartItems.map(item => {\n                            return <Something item={item} />\n                        }\n                            \n                        )} \n\n                    </div>\n\n                    <div className=\"col-12 col-lg-3 my-4\">\n                        <div id=\"order_summary\">\n                            <h4>Order Summary</h4>\n                            <hr />\n                            <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\n                            <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\n\n                            <hr />\n                            <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n            )}\n    </Fragment>\n    )\n}\n\nexport default Cart ;","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/cart/something.js",["249","250","251"],"import React , {Fragment, useEffect , useState} from 'react' ;\nimport {Route ,Link} from 'react-router-dom' ;\n\nimport { useDispatch , useSelector } from 'react-redux';\nimport { addItemToCart , removeItemFromCart ,  } from '../../actions/cartAction' ;\n\nexport const Something = ({item}) => {\n\n    const {cartItems } = useSelector(state => state.cart) ;\n\n    useEffect( () => {\n\n        console.log(cartItems) ;\n    } ,[cartItems]\n    )\n\n    const dispatch = useDispatch() ;\n\n    const removeCartItemHandler = (id) => {\n        dispatch(removeItemFromCart(id))\n    }\n\n    const increaseQty = (id, quantity, stock) => {\n        const newQty = quantity + 1;\n\n        if (newQty > stock) return;\n\n         dispatch(addItemToCart(id, newQty))\n    }\n\n    const decreaseQty = (id, quantity) => {\n\n        const newQty = quantity - 1;\n\n        if (newQty <= 0) return;\n\n        dispatch(addItemToCart(id, newQty))\n\n    }\n\n   \n                return (\n                    \n                             <React.Fragment>\n                                  <hr />\n\n                                <div className=\"cart-item\" key={item.product}>\n                                    {console.log(item.image.url)}\n                                    <div className=\"row\">\n                                        <div className=\"col-4 col-lg-3\">\n                                            <img src={item.image.url} alt=\"Laptop\" height=\"90\" width=\"115\" />\n                                        </div>\n                                        \n                                        <div className=\"col-5 col-lg-3\">\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </div>\n                                       \n                                        \n\n                                         <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                            <p id=\"card_item_price\">${item.price}</p>\n                                        </div>\n\n                                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                            <div className=\"stockCounter d-inline\">\n                                                <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\n\n                                                <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\n\n                                                <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                                            <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\n                                        </div> \n\n                                    </div>\n                                </div>\n                                <hr />\n\n                                </React.Fragment>\n                              \n                        \n\n                    \n    )\n}\n","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/reducers/root-reducers.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/cart/Shipping.js",["252","253","254","255","256"],"import React , {Fragment, useEffect , useState , useMemo} from 'react' ;\nimport { useAlert } from 'react-alert';\n\nimport Loader from '../layout/loader';\n\nimport {Something} from './something' ;\nimport { useDispatch , useSelector } from 'react-redux';\nimport { MetaData } from '../layout/MetaData';\nimport { saveShippingInfo  } from '../../actions/cartAction' ;\n\nimport countries from 'countries-list' ;\n\nimport countryList from 'react-select-country-list' ;\nimport CheckoutSteps from './CheckoutStep' ;\n\nconst Shipping = ({history}) => { \n\n    const countriesList = Object.values(countries)\n     //console.log(countriesList[0]) ;\n    const dispatch = useDispatch() ;\n\n    const options = useMemo(() => countryList().getData() , []) ;\n\n    console.log(options) ;\n    const { shippingInfo } = useSelector(state => state.cart) ;\n\n    const [address , setAddress] = useState(shippingInfo.address) ;\n    const [city , setCity] = useState(shippingInfo.city) ;\n    const [postalCode , setPostalCode] = useState(shippingInfo.postalCode) ;\n    const [phoneNo , setPhoneNo] = useState(shippingInfo.phoneno) ;\n    const [country , setCountry] = useState(shippingInfo.country) ;\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingInfo({\n            address ,\n            city ,\n            phoneNo ,\n            postalCode ,\n            country\n        })) ;\n\n        history.push('/confirm')\n    }\n    return (\n        <Fragment>\n\n            <MetaData title={'Shipping Info'} />\n\n            <CheckoutSteps shipping />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-4\">Shipping Info</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"address_field\">Address</label>\n                            <input\n                                type=\"text\"\n                                id=\"address_field\"\n                                className=\"form-control\"\n                                value={address}\n                                onChange={(e) => setAddress(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"city_field\">City</label>\n                            <input\n                                type=\"text\"\n                                id=\"city_field\"\n                                className=\"form-control\"\n                                value={city}\n                                onChange={(e) => setCity(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"phone_field\">Phone No</label>\n                            <input\n                                type=\"phone\"\n                                id=\"phone_field\"\n                                className=\"form-control\"\n                                value={phoneNo}\n                                onChange={(e) => setPhoneNo(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\n                            <input\n                                type=\"number\"\n                                id=\"postal_code_field\"\n                                className=\"form-control\"\n                                value={postalCode}\n                                onChange={(e) => setPostalCode(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"country_field\">Country</label>\n                            <select\n                                id=\"country_field\"\n                                className=\"form-control\"\n                                value={country}\n                                onChange={(e) => setCountry(e.target.value)}\n                                required\n                            >\n\n                                {options.map(country => (\n                                    <option key={country.label} value={country.label}>\n                                        {country.label}\n                                    </option>\n                                ))}\n\n                            </select>\n                        </div>\n\n                        <button\n                            id=\"shipping_btn\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                        >\n                            CONTINUE\n                            </button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n\n\n}\n\nexport default Shipping ;","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/cart/CheckoutStep.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/cart/ConfirmOrder.js",["257","258","259","260","261","262","263","264"],"import { Link } from 'react-router-dom'\n\nimport React , {Fragment, useEffect , useState} from 'react' ;\nimport { useAlert } from 'react-alert';\n\nimport Loader from '../layout/loader';\n\nimport {Something} from './something' ;\nimport { useDispatch , useSelector } from 'react-redux';\nimport { MetaData } from '../layout/MetaData';\nimport { addItemToCart , removeItemFromCart ,  } from '../../actions/cartAction' ;\nimport CheckoutSteps from './CheckoutStep';\n\nconst CheckoutOrder = ({ history }) => {\n\n    const { cartItems , shippingInfo } = useSelector(state => state.cart) ;\n    const { user } = useSelector(state => state.auth) ;\n\n    const itemPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity , 0) ;\n    const shippingPrice = itemPrice > 200 ? 0 : 25 ;\n    const taxPrice = Number((0.05 * itemPrice).toFixed(2))\n    const totalPrice = (itemPrice + shippingPrice + taxPrice)\n\n    console.log(itemPrice + \" \" + shippingPrice + \" \" + taxPrice)\n    const processToPayment = () => {\n        const data = {\n            itemPrice: itemPrice.toFixed(2) ,\n            shippingPrice ,\n            taxPrice ,\n            totalPrice\n        }\n\n        sessionStorage.setItem('orderInfo' , JSON.stringify(data))\n        history.push('/payment')\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Confirm Order'} />\n\n            <CheckoutSteps shipping confirmOrder />\n\n            <div className=\"row d-flex justify-content-between\">\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\n\n                    <h4 className=\"mb-3\">Shipping Info</h4>\n                    <p><b>Name:</b> {user && user.name}</p>\n                    <p><b>Phone:</b> {shippingInfo.phoneNo}</p>\n                    <p className=\"mb-4\"><b>Address:</b> {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}</p>\n\n                    <hr />\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\n\n                    {cartItems.map(item => (\n                        <Fragment>\n                            <hr />\n                            <div className=\"cart-item my-1\" key={item.product}>\n                                <div className=\"row\">\n                                    <div className=\"col-4 col-lg-2\">\n                                        <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\" />\n                                    </div>\n\n                                    <div className=\"col-5 col-lg-6\">\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </div>\n\n\n                                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\n                                        <p>{item.quantity} x ${item.price} = <b>${(item.quantity * item.price).toFixed(2)}</b></p>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <hr />\n                        </Fragment>\n                    ))}\n\n\n\n                </div>\n\n                <div className=\"col-12 col-lg-3 my-4\">\n                    <div id=\"order_summary\">\n                        <h4>Order Summary</h4>\n                        <hr />\n                        <p>Subtotal:  <span className=\"order-summary-values\">${itemPrice}</span></p>\n                        <p>Shipping: <span className=\"order-summary-values\">${shippingPrice}</span></p>\n                        <p>Tax:  <span className=\"order-summary-values\">${taxPrice}</span></p>\n\n                        <hr />\n\n                        <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\n\n                        <hr />\n                        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={processToPayment}>Proceed to Payment</button>\n                    </div>\n                </div>\n\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default CheckoutOrder\n","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/cart/payment.js",["265","266","267","268","269","270","271","272"],"import { Link } from 'react-router-dom'\n\nimport React , {Fragment, useEffect , useState} from 'react' ;\nimport { useAlert } from 'react-alert';\n\nimport Loader from '../layout/loader';\n\nimport {Something} from './something' ;\nimport { useDispatch , useSelector } from 'react-redux';\nimport { MetaData } from '../layout/MetaData';\nimport { addItemToCart , removeItemFromCart ,  } from '../../actions/cartAction' ;\nimport CheckoutSteps from './CheckoutStep';\n\nimport {newOrder} from '../../actions/orderAction'\n\nimport { useStripe , useElements , CardNumberElement , CardExpiryElement , CardCvcElement } from '@stripe/react-stripe-js'  ;\n\nimport axios from 'axios'\n\nconst options = {\n    style:{\n        base: {\n            fontSize: '16px'\n        } ,\n        invalid: {\n            color: '#9e2146'\n        }\n    }\n}\n\nconst Payment = ({ history }) => {\n\n    const alert = useAlert() ;\n    const stripe = useStripe() ;\n    const elements = useElements() ;\n    const dispatch = useDispatch() ;\n\n\n    const { user } = useSelector(state => state.auth) ;\n    //const { order } = useSelector(state => state.order) ;\n\n    const {cartItems , shippingInfo } = useSelector(state => state.cart) ;\n    \n    useEffect(() => {\n\n    } , []) ;\n\n    const data = localStorage.getItem('shippingInfo') \n\n    console.log(data) ;\n    const order = {\n        orderItems: cartItems ,\n        shippingInfo\n    }\n\n    console.log(order) ;\n    \n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'))\n    //console.log(orderInfo)\n\n\n    if(orderInfo) {\n        order.itemsPrice = orderInfo.itemPrice ;\n        order.shippingPrice = orderInfo.shippingPrice ;\n        order.taxPrice = order.taxPrice ;\n        order.totalPrice = order.totalPrice ;\n\n    }\n\n    const paymentData = {\n       amount: Math.round( 500 * 100 ) \n\n    }\n    console.log(paymentData)\n\n    const submitHandler = async (e) => {\n        e.preventDefault() ;\n\n        document.querySelector('#pay_btn').disabled = true ;\n\n\n        let res ;\n        try{\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n\n            res = await axios.post('/api/v1/payment/process' , paymentData , config) ;\n\n            const clientSecret = res.data.client_Secret;\n\n            console.log(clientSecret) ;\n\n            if(!stripe || !elements) {\n\n                return ;\n            }\n\n            const result = await stripe.confirmCardPayment(clientSecret , {\n                payment_method: {\n                    card: elements.getElement(CardNumberElement) ,\n                    billing_details: {\n                        name: user.name ,\n                        email: user.email\n                    }\n                }\n            }) ;\n\n            if(result.error) {\n                alert.error(result.error) ;\n                document.querySelector('#pay_btn').disabled = false ;\n            } else {\n                if(result.paymentIntent.status === 'succeeded') {\n                    order.paymentInfo = {\n                        id: result.paymentIntent.id ,\n                        status: result.paymentIntent.status\n                    }\n\n                    dispatch(newOrder(order)) ;\n                    history.push('/orderSuccess') ;\n                } else {\n                    alert.error('There is some error occured wile processing payment') ;\n                }\n            }\n        } catch(error) {\n            document.querySelector('#pay_btn').disabled = false ;\n            alert.error(error)\n            console.log(error) ;\n        }\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Payment'} />\n\n            <CheckoutSteps shipping confirmOrder payment />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\"\n                    onSubmit={submitHandler}\n                    >\n                        <h1 className=\"mb-4\">Card Info</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"card_num_field\">Card Number</label>\n                            <CardNumberElement\n                                type=\"text\"\n                                id=\"card_num_field\"\n                                className=\"form-control\"\n                                options={options}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"card_exp_field\">Card Expiry</label>\n                            <CardExpiryElement\n                                type=\"text\"\n                                id=\"card_exp_field\"\n                                className=\"form-control\"\n                                options={options}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"card_cvc_field\">Card CVC</label>\n                            <CardCvcElement\n                                type=\"text\"\n                                id=\"card_cvc_field\"\n                                className=\"form-control\"\n                                options={options}\n                            />\n                        </div>\n\n\n                        <button\n                            id=\"pay_btn\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                        >\n                            Pay {` - $${orderInfo.totalPrice}`}\n                        </button>\n\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default Payment ;\n","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/reducers/orderReducer.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/constants/orderConstants.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/actions/orderAction.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/cart/orderSuccess.js",["273"],"import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport {MetaData} from '../layout/MetaData'\n\nconst OrderSuccess = () => {\n    return (\n        <Fragment>\n\n            <MetaData title={'Order Success'} />\n\n            <div className=\"row justify-content-center\">\n                <div className=\"col-6 mt-5 text-center\">\n                    <img className=\"my-5 img-fluid d-block mx-auto\" src=\"/images/order_success.png\" alt=\"Order Success\" width=\"200\" height=\"200\" />\n\n                    <h2>Your Order has been placed successfully.</h2>\n\n                    {/* <Link to=\"/orders/me\">Go to Orders</Link> */}\n                </div>\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default OrderSuccess\n","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/orders/ListOrders.js",["274","275"],"import React , {Fragment ,useState , useEffect} from 'react'\n\nimport {Link} from 'react-router-dom' ;\nimport {MDBDataTable} from 'mdbreact'\n\nimport { MetaData } from '../layout/MetaData';\nimport Loader from '../layout/loader';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch , useSelector } from 'react-redux';\nimport { myOrders , cleanErrors } from '../../actions/orderAction';\n\nconst ListOrders = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, error, orders } = useSelector(state => state.myOrders);\n\n    //const [title , setTitle] = useState(0) ;\n\n    useEffect(() => {\n         //dispatch(myOrders());\n       // console.log(title) ;\n        console.log('This are orders') ;\n        console.log(orders) ;\n        if (error) {\n            alert.error(error);\n            dispatch(cleanErrors())\n        }\n    }, [dispatch , orders , myOrders ])\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Num of Items',\n                    field: 'numOfItems',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                },\n            ],\n            rows: []\n        }\n\n        orders.orders.forEach(order => {\n            data.rows.push({\n                id: order._id,\n                numOfItems: order.orderItems.length,\n                amount: `$${order.totalPrice}`,\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\n                actions:\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n      \n        <Fragment>\n\n            <MetaData title={'My Orders'} />\n\n            <h1 className=\"my-5\">My Orders</h1>\n            {/* <button onClick = {setTitle(1)} >click me</button> */}\n            {loading ? <Loader /> : (\n                <MDBDataTable\n                    data={setOrders()}\n                    className=\"px-3\"\n                    bordered\n                    striped\n                    hover\n                />\n            )}\n\n        </Fragment>\n    )\n\n}\n\nexport default ListOrders\n","/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/orders/orderDetail.js",[],"/home/emu/Documents/Programming/projects/Mern Projects/frontend/src/components/review/review.js",[],{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","severity":1,"message":"281","line":11,"column":8,"nodeType":"282","messageId":"283","endLine":11,"endColumn":13},{"ruleId":"280","severity":1,"message":"284","line":21,"column":8,"nodeType":"282","messageId":"283","endLine":21,"endColumn":15},{"ruleId":"280","severity":1,"message":"285","line":30,"column":10,"nodeType":"282","messageId":"283","endLine":30,"endColumn":21},{"ruleId":"280","severity":1,"message":"286","line":30,"column":24,"nodeType":"282","messageId":"283","endLine":30,"endColumn":35},{"ruleId":"280","severity":1,"message":"287","line":33,"column":10,"nodeType":"282","messageId":"283","endLine":33,"endColumn":18},{"ruleId":"280","severity":1,"message":"288","line":34,"column":10,"nodeType":"282","messageId":"283","endLine":34,"endColumn":20},{"ruleId":"280","severity":1,"message":"289","line":38,"column":10,"nodeType":"282","messageId":"283","endLine":38,"endColumn":22},{"ruleId":"280","severity":1,"message":"290","line":1,"column":28,"nodeType":"282","messageId":"283","endLine":1,"endColumn":36},{"ruleId":"280","severity":1,"message":"291","line":12,"column":36,"nodeType":"282","messageId":"283","endLine":12,"endColumn":41},{"ruleId":"292","severity":1,"message":"293","line":23,"column":7,"nodeType":"294","endLine":23,"endColumn":24,"suggestions":"295"},{"ruleId":"296","severity":1,"message":"297","line":36,"column":11,"nodeType":"298","endLine":36,"endColumn":49},{"ruleId":"280","severity":1,"message":"299","line":14,"column":10,"nodeType":"282","messageId":"283","endLine":14,"endColumn":15},{"ruleId":"280","severity":1,"message":"300","line":48,"column":41,"nodeType":"282","messageId":"283","endLine":48,"endColumn":51},{"ruleId":"280","severity":1,"message":"301","line":51,"column":11,"nodeType":"282","messageId":"283","endLine":51,"endColumn":20},{"ruleId":"302","severity":1,"message":"303","line":91,"column":46,"nodeType":"304","messageId":"305","endLine":91,"endColumn":47},{"ruleId":"280","severity":1,"message":"306","line":1,"column":24,"nodeType":"282","messageId":"283","endLine":1,"endColumn":39},{"ruleId":"280","severity":1,"message":"307","line":4,"column":10,"nodeType":"282","messageId":"283","endLine":4,"endColumn":21},{"ruleId":"280","severity":1,"message":"308","line":4,"column":24,"nodeType":"282","messageId":"283","endLine":4,"endColumn":35},{"ruleId":"280","severity":1,"message":"309","line":5,"column":9,"nodeType":"282","messageId":"283","endLine":5,"endColumn":24},{"ruleId":"280","severity":1,"message":"310","line":5,"column":27,"nodeType":"282","messageId":"283","endLine":5,"endColumn":48},{"ruleId":"280","severity":1,"message":"311","line":6,"column":10,"nodeType":"282","messageId":"283","endLine":6,"endColumn":21},{"ruleId":"280","severity":1,"message":"312","line":1,"column":28,"nodeType":"282","messageId":"283","endLine":1,"endColumn":48},{"ruleId":"280","severity":1,"message":"313","line":1,"column":50,"nodeType":"282","messageId":"283","endLine":1,"endColumn":73},{"ruleId":"296","severity":1,"message":"297","line":8,"column":26,"nodeType":"298","endLine":11,"endColumn":30},{"ruleId":"292","severity":1,"message":"314","line":62,"column":9,"nodeType":"294","endLine":62,"endColumn":37,"suggestions":"315"},{"ruleId":"296","severity":1,"message":"297","line":154,"column":29,"nodeType":"298","endLine":154,"endColumn":78},{"ruleId":"280","severity":1,"message":"316","line":1,"column":17,"nodeType":"282","messageId":"283","endLine":1,"endColumn":25},{"ruleId":"280","severity":1,"message":"317","line":1,"column":38,"nodeType":"282","messageId":"283","endLine":1,"endColumn":47},{"ruleId":"280","severity":1,"message":"318","line":16,"column":5,"nodeType":"282","messageId":"283","endLine":16,"endColumn":27},{"ruleId":"280","severity":1,"message":"319","line":17,"column":5,"nodeType":"282","messageId":"283","endLine":17,"endColumn":27},{"ruleId":"280","severity":1,"message":"320","line":18,"column":5,"nodeType":"282","messageId":"283","endLine":18,"endColumn":25},{"ruleId":"280","severity":1,"message":"321","line":19,"column":5,"nodeType":"282","messageId":"283","endLine":19,"endColumn":24},{"ruleId":"280","severity":1,"message":"322","line":20,"column":5,"nodeType":"282","messageId":"283","endLine":20,"endColumn":28},{"ruleId":"280","severity":1,"message":"323","line":21,"column":5,"nodeType":"282","messageId":"283","endLine":21,"endColumn":28},{"ruleId":"280","severity":1,"message":"324","line":22,"column":5,"nodeType":"282","messageId":"283","endLine":22,"endColumn":25},{"ruleId":"280","severity":1,"message":"325","line":23,"column":5,"nodeType":"282","messageId":"283","endLine":23,"endColumn":25},{"ruleId":"280","severity":1,"message":"326","line":24,"column":5,"nodeType":"282","messageId":"283","endLine":24,"endColumn":25},{"ruleId":"280","severity":1,"message":"327","line":25,"column":5,"nodeType":"282","messageId":"283","endLine":25,"endColumn":22},{"ruleId":"280","severity":1,"message":"328","line":26,"column":5,"nodeType":"282","messageId":"283","endLine":26,"endColumn":22},{"ruleId":"280","severity":1,"message":"329","line":27,"column":5,"nodeType":"282","messageId":"283","endLine":27,"endColumn":22},{"ruleId":"280","severity":1,"message":"330","line":28,"column":5,"nodeType":"282","messageId":"283","endLine":28,"endColumn":19},{"ruleId":"280","severity":1,"message":"331","line":29,"column":5,"nodeType":"282","messageId":"283","endLine":29,"endColumn":25},{"ruleId":"280","severity":1,"message":"332","line":30,"column":5,"nodeType":"282","messageId":"283","endLine":30,"endColumn":25},{"ruleId":"280","severity":1,"message":"333","line":31,"column":5,"nodeType":"282","messageId":"283","endLine":31,"endColumn":22},{"ruleId":"280","severity":1,"message":"334","line":36,"column":5,"nodeType":"282","messageId":"283","endLine":36,"endColumn":24},{"ruleId":"280","severity":1,"message":"335","line":37,"column":5,"nodeType":"282","messageId":"283","endLine":37,"endColumn":24},{"ruleId":"280","severity":1,"message":"336","line":38,"column":5,"nodeType":"282","messageId":"283","endLine":38,"endColumn":22},{"ruleId":"280","severity":1,"message":"337","line":39,"column":5,"nodeType":"282","messageId":"283","endLine":39,"endColumn":21},{"ruleId":"292","severity":1,"message":"338","line":35,"column":9,"nodeType":"294","endLine":35,"endColumn":44,"suggestions":"339"},{"ruleId":"292","severity":1,"message":"340","line":41,"column":9,"nodeType":"294","endLine":41,"endColumn":35,"suggestions":"341"},{"ruleId":"342","severity":1,"message":"343","line":60,"column":26,"nodeType":"344","messageId":"345","endLine":60,"endColumn":28},{"ruleId":"280","severity":1,"message":"286","line":4,"column":9,"nodeType":"282","messageId":"283","endLine":4,"endColumn":20},{"ruleId":"280","severity":1,"message":"286","line":2,"column":9,"nodeType":"282","messageId":"283","endLine":2,"endColumn":20},{"ruleId":"280","severity":1,"message":"346","line":8,"column":13,"nodeType":"282","messageId":"283","endLine":8,"endColumn":17},{"ruleId":"280","severity":1,"message":"347","line":2,"column":10,"nodeType":"282","messageId":"283","endLine":2,"endColumn":14},{"ruleId":"280","severity":1,"message":"348","line":6,"column":8,"nodeType":"282","messageId":"283","endLine":6,"endColumn":14},{"ruleId":"292","severity":1,"message":"349","line":52,"column":9,"nodeType":"294","endLine":52,"endColumn":71,"suggestions":"350"},{"ruleId":"280","severity":1,"message":"317","line":1,"column":27,"nodeType":"282","messageId":"283","endLine":1,"endColumn":36},{"ruleId":"280","severity":1,"message":"290","line":1,"column":39,"nodeType":"282","messageId":"283","endLine":1,"endColumn":47},{"ruleId":"280","severity":1,"message":"351","line":2,"column":10,"nodeType":"282","messageId":"283","endLine":2,"endColumn":18},{"ruleId":"280","severity":1,"message":"348","line":4,"column":8,"nodeType":"282","messageId":"283","endLine":4,"endColumn":14},{"ruleId":"280","severity":1,"message":"352","line":18,"column":11,"nodeType":"282","messageId":"283","endLine":18,"endColumn":32},{"ruleId":"280","severity":1,"message":"353","line":22,"column":11,"nodeType":"282","messageId":"283","endLine":22,"endColumn":22},{"ruleId":"280","severity":1,"message":"354","line":30,"column":11,"nodeType":"282","messageId":"283","endLine":30,"endColumn":22},{"ruleId":"280","severity":1,"message":"316","line":1,"column":17,"nodeType":"282","messageId":"283","endLine":1,"endColumn":25},{"ruleId":"280","severity":1,"message":"290","line":1,"column":39,"nodeType":"282","messageId":"283","endLine":1,"endColumn":47},{"ruleId":"280","severity":1,"message":"355","line":2,"column":9,"nodeType":"282","messageId":"283","endLine":2,"endColumn":14},{"ruleId":"280","severity":1,"message":"317","line":1,"column":27,"nodeType":"282","messageId":"283","endLine":1,"endColumn":36},{"ruleId":"280","severity":1,"message":"351","line":2,"column":10,"nodeType":"282","messageId":"283","endLine":2,"endColumn":18},{"ruleId":"280","severity":1,"message":"348","line":4,"column":8,"nodeType":"282","messageId":"283","endLine":4,"endColumn":14},{"ruleId":"280","severity":1,"message":"356","line":6,"column":9,"nodeType":"282","messageId":"283","endLine":6,"endColumn":18},{"ruleId":"280","severity":1,"message":"357","line":18,"column":11,"nodeType":"282","messageId":"283","endLine":18,"endColumn":24},{"ruleId":"280","severity":1,"message":"317","line":3,"column":27,"nodeType":"282","messageId":"283","endLine":3,"endColumn":36},{"ruleId":"280","severity":1,"message":"290","line":3,"column":39,"nodeType":"282","messageId":"283","endLine":3,"endColumn":47},{"ruleId":"280","severity":1,"message":"351","line":4,"column":10,"nodeType":"282","messageId":"283","endLine":4,"endColumn":18},{"ruleId":"280","severity":1,"message":"348","line":6,"column":8,"nodeType":"282","messageId":"283","endLine":6,"endColumn":14},{"ruleId":"280","severity":1,"message":"356","line":8,"column":9,"nodeType":"282","messageId":"283","endLine":8,"endColumn":18},{"ruleId":"280","severity":1,"message":"286","line":9,"column":10,"nodeType":"282","messageId":"283","endLine":9,"endColumn":21},{"ruleId":"280","severity":1,"message":"358","line":11,"column":10,"nodeType":"282","messageId":"283","endLine":11,"endColumn":23},{"ruleId":"280","severity":1,"message":"359","line":11,"column":26,"nodeType":"282","messageId":"283","endLine":11,"endColumn":44},{"ruleId":"280","severity":1,"message":"347","line":1,"column":10,"nodeType":"282","messageId":"283","endLine":1,"endColumn":14},{"ruleId":"280","severity":1,"message":"290","line":3,"column":39,"nodeType":"282","messageId":"283","endLine":3,"endColumn":47},{"ruleId":"280","severity":1,"message":"348","line":6,"column":8,"nodeType":"282","messageId":"283","endLine":6,"endColumn":14},{"ruleId":"280","severity":1,"message":"356","line":8,"column":9,"nodeType":"282","messageId":"283","endLine":8,"endColumn":18},{"ruleId":"280","severity":1,"message":"358","line":11,"column":10,"nodeType":"282","messageId":"283","endLine":11,"endColumn":23},{"ruleId":"280","severity":1,"message":"359","line":11,"column":26,"nodeType":"282","messageId":"283","endLine":11,"endColumn":44},{"ruleId":"360","severity":1,"message":"361","line":65,"column":26,"nodeType":"362","messageId":"363","endLine":65,"endColumn":40},{"ruleId":"360","severity":1,"message":"364","line":66,"column":28,"nodeType":"362","messageId":"363","endLine":66,"endColumn":44},{"ruleId":"280","severity":1,"message":"347","line":2,"column":10,"nodeType":"282","messageId":"283","endLine":2,"endColumn":14},{"ruleId":"280","severity":1,"message":"290","line":1,"column":27,"nodeType":"282","messageId":"283","endLine":1,"endColumn":35},{"ruleId":"292","severity":1,"message":"365","line":29,"column":8,"nodeType":"294","endLine":29,"endColumn":39,"suggestions":"366"},"no-native-reassign",["367"],"no-negated-in-lhs",["368"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Payment' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'Elements' is defined but never used.","'loadStripe' is defined but never used.","'stripeApiKey' is assigned a value but never used.","'useState' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.name'. Either include it or remove the dependency array.","ArrayExpression",["369"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'login' is defined but never used.","'resPerPage' is assigned a value but never used.","'prodCount' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'combineReducers' is defined but never used.","'authReducer' is defined but never used.","'userReducer' is defined but never used.","'productsReducer' is defined but never used.","'productDetailsReducer' is defined but never used.","'cartReducer' is defined but never used.","'PRODUCTS_DETAIL_FAIL' is defined but never used.","'PRODUCTS_DETAIL_SUCCESS' is defined but never used.","React Hook useEffect has missing dependencies: 'alert', 'cartItems', 'error', 'reviewError', and 'success'. Either include them or remove the dependency array.",["370"],"'Fragment' is defined but never used.","'useEffect' is defined but never used.","'UPDATE_PROFILE_REQUEST' is defined but never used.","'UPDATE_PROFILE_SUCCESS' is defined but never used.","'UPDATE_PROFILE_RESET' is defined but never used.","'UPDATE_PROFILE_FAIL' is defined but never used.","'FORGOT_PASSWORD_REQUEST' is defined but never used.","'FORGOT_PASSWORD_SUCCESS' is defined but never used.","'FORGOT_PASSWORD_FAIL' is defined but never used.","'NEW_PASSWORD_REQUEST' is defined but never used.","'NEW_PASSWORD_SUCCESS' is defined but never used.","'NEW_PASSWORD_FAIL' is defined but never used.","'ALL_USERS_REQUEST' is defined but never used.","'ALL_USERS_SUCCESS' is defined but never used.","'ALL_USERS_FAIL' is defined but never used.","'USER_DETAILS_REQUEST' is defined but never used.","'USER_DETAILS_SUCCESS' is defined but never used.","'USER_DETAILS_FAIL' is defined but never used.","'DELETE_USER_REQUEST' is defined but never used.","'DELETE_USER_SUCCESS' is defined but never used.","'DELETE_USER_RESET' is defined but never used.","'DELETE_USER_FAIL' is defined but never used.","React Hook useEffect has missing dependencies: 'alert', 'history', and 'redirect'. Either include them or remove the dependency array.",["371"],"React Hook useEffect has a missing dependency: 'alert'. Either include it or remove the dependency array.",["372"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","'Link' is defined but never used.","'Loader' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["373"],"'useAlert' is defined but never used.","'removeCartItemHandler' is assigned a value but never used.","'increaseQty' is assigned a value but never used.","'decreaseQty' is assigned a value but never used.","'Route' is defined but never used.","'Something' is defined but never used.","'countriesList' is assigned a value but never used.","'addItemToCart' is defined but never used.","'removeItemFromCart' is defined but never used.","no-self-assign","'order.taxPrice' is assigned to itself.","MemberExpression","selfAssignment","'order.totalPrice' is assigned to itself.","React Hook useEffect has missing dependencies: 'alert' and 'error'. Either include them or remove the dependency array. Outer scope values like 'myOrders' aren't valid dependencies because mutating them doesn't re-render the component.",["374"],"no-global-assign","no-unsafe-negation",{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},"Update the dependencies array to be: [isAuthenticated, user.name]",{"range":"387","text":"388"},"Update the dependencies array to be: [alert, cartItems, dispatch, error, match.params.id, reviewError, success]",{"range":"389","text":"390"},"Update the dependencies array to be: [isAuthenticated, dispatch, error, history, redirect, alert]",{"range":"391","text":"392"},"Update the dependencies array to be: [isAuthenticated, error, alert]",{"range":"393","text":"394"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, updatedUser, user]",{"range":"395","text":"396"},"Update the dependencies array to be: [dispatch, orders, error, alert]",{"range":"397","text":"398"},[503,520],"[isAuthenticated, user.name]",[1838,1866],"[alert, cartItems, dispatch, error, match.params.id, reviewError, success]",[982,1017],"[isAuthenticated, dispatch, error, history, redirect, alert]",[1006,1032],"[isAuthenticated, error, alert]",[1580,1642],"[dispatch, alert, error, history, isUpdated, updatedUser, user]",[876,907],"[dispatch, orders, error, alert]"]